{"version":3,"file":"blocksupports/index.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;ACAe;AACf;AACA,oBAAoB,sBAAsB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;UChBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AAEAA,oEAAiB,CAAE,4BAAF,EAAgC;AAC7CG,EAAAA,UAAU,EAAE,CADiC;AAE7CC,EAAAA,KAAK,EAAE,uBAFsC;AAG7CC,EAAAA,IAAI,EAAE,sBAHuC;AAI7CC,EAAAA,QAAQ,EAAE,QAJmC;AAK7CC,EAAAA,UAAU,EAAE;AACRC,IAAAA,OAAO,EAAE;AACLC,MAAAA,IAAI,EAAE,OADD;AAELC,MAAAA,MAAM,EAAE,UAFH;AAGLC,MAAAA,QAAQ,EAAE;AAHL;AADD,GALiC;AAY7CC,EAAAA,OAAO,EAAE;AACLL,IAAAA,UAAU,EAAE;AACRC,MAAAA,OAAO,EAAE;AADD;AADP,GAZoC;AAiB7CK,EAAAA,IAAI,EAAIC,KAAF,IAAa;AACf,UAAM;AACFP,MAAAA,UAAU,EAAE;AAAEC,QAAAA;AAAF,OADV;AAEFO,MAAAA,aAFE;AAGFC,MAAAA;AAHE,QAIFF,KAJJ;AAKA,UAAMG,UAAU,GAAGhB,sEAAa,EAAhC;;AACA,UAAMiB,eAAe,GAAKC,UAAF,IAAkB;AACtCJ,MAAAA,aAAa,CAAE;AAAEP,QAAAA,OAAO,EAAEW;AAAX,OAAF,CAAb;AACH,KAFD;;AAGA,WACI,kEAAC,6DAAD,iFACSF,UADT;AAEI,aAAO,EAAC,GAFZ;AAGI,cAAQ,EAAGC,eAHf;AAII,WAAK,EAAGV;AAJZ,OADJ;AAQH,GAnC4C;AAoC7CY,EAAAA,IAAI,EAAIN,KAAF,IAAa;AACf,UAAMG,UAAU,GAAGhB,uEAAA,EAAnB;AACA,WACI,kEAAC,qEAAD,iFACSgB,UADT;AAEI,aAAO,EAAC,GAFZ;AAGI,WAAK,EAAGH,KAAK,CAACP,UAAN,CAAiBC;AAH7B,OADJ;AAOH;AA7C4C,CAAhC,CAAjB,C","sources":["webpack://gutenbergblocks/external window [\"wp\",\"blockEditor\"]","webpack://gutenbergblocks/external window [\"wp\",\"blocks\"]","webpack://gutenbergblocks/external window [\"wp\",\"element\"]","webpack://gutenbergblocks/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://gutenbergblocks/webpack/bootstrap","webpack://gutenbergblocks/webpack/runtime/compat get default export","webpack://gutenbergblocks/webpack/runtime/define property getters","webpack://gutenbergblocks/webpack/runtime/hasOwnProperty shorthand","webpack://gutenbergblocks/webpack/runtime/make namespace object","webpack://gutenbergblocks/./src/blocksupports/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"element\"];","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\r\nimport { useBlockProps, RichText } from '@wordpress/block-editor';\r\n \r\nregisterBlockType( 'create-block/blocksupports', {\r\n    apiVersion: 2,\r\n    title: 'Block Support Options',\r\n    icon: 'universal-access-alt',\r\n    category: 'common',\r\n    attributes: {\r\n        content: {\r\n            type: 'array',\r\n            source: 'children',\r\n            selector: 'p',\r\n        },\r\n    },\r\n    example: {\r\n        attributes: {\r\n            content: 'Hello World',\r\n        },\r\n    },\r\n    edit: ( props ) => {\r\n        const {\r\n            attributes: { content },\r\n            setAttributes,\r\n            className,\r\n        } = props;\r\n        const blockProps = useBlockProps();\r\n        const onChangeContent = ( newContent ) => {\r\n            setAttributes( { content: newContent } );\r\n        };\r\n        return (\r\n            <RichText\r\n                { ...blockProps }\r\n                tagName=\"p\"\r\n                onChange={ onChangeContent }\r\n                value={ content }\r\n            />\r\n        );\r\n    },\r\n    save: ( props ) => {\r\n        const blockProps = useBlockProps.save();\r\n        return (\r\n            <RichText.Content\r\n                { ...blockProps }\r\n                tagName=\"p\"\r\n                value={ props.attributes.content }\r\n            />\r\n        );\r\n    },\r\n} );"],"names":["registerBlockType","useBlockProps","RichText","apiVersion","title","icon","category","attributes","content","type","source","selector","example","edit","props","setAttributes","className","blockProps","onChangeContent","newContent","save"],"sourceRoot":""}