{"version":3,"file":"gutenbergrichtext/index.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNA;AAEA;AAOAA,oEAAiB,CAAE,gCAAF,EAAoC;AACjDK,EAAAA,UAAU,EAAE,CADqC;AAEjDC,EAAAA,KAAK,EAAE,4BAF0C;AAGjDC,EAAAA,IAAI,EAAE,sBAH2C;AAIjDC,EAAAA,QAAQ,EAAE,QAJuC;AAKjDC,EAAAA,UAAU,EAAE;AACRC,IAAAA,OAAO,EAAE;AACLC,MAAAA,IAAI,EAAE,OADD;AAELC,MAAAA,MAAM,EAAE,UAFH;AAGLC,MAAAA,QAAQ,EAAE;AAHL,KADD;AAMRC,IAAAA,SAAS,EAAE;AACPH,MAAAA,IAAI,EAAE,QADC;AAEPI,MAAAA,OAAO,EAAE;AAFF;AANH,GALqC;AAgBjDC,EAAAA,OAAO,EAAE;AACLP,IAAAA,UAAU,EAAE;AACRC,MAAAA,OAAO,EAAE,aADD;AAERI,MAAAA,SAAS,EAAE;AAFH;AADP,GAhBwC;AAsBjDG,EAAAA,IAAI,EAAE,QAAqC;AAAA,QAAnC;AAAER,MAAAA,UAAF;AAAcS,MAAAA;AAAd,KAAmC;;AACvC,UAAMC,eAAe,GAAKC,UAAF,IAAkB;AACtCF,MAAAA,aAAa,CAAE;AAAER,QAAAA,OAAO,EAAEU;AAAX,OAAF,CAAb;AACH,KAFD;;AAIA,UAAMC,iBAAiB,GAAKC,YAAF,IAAoB;AAC1CJ,MAAAA,aAAa,CAAE;AACXJ,QAAAA,SAAS,EAAEQ,YAAY,KAAKC,SAAjB,GAA6B,MAA7B,GAAsCD;AADtC,OAAF,CAAb;AAGH,KAJD;;AAMA,WACI,yEAAUrB,sEAAa,EAAvB,EAEQ,kEAAC,kEAAD,QACI,kEAAC,qEAAD;AACI,WAAK,EAAGQ,UAAU,CAACK,SADvB;AAEI,cAAQ,EAAGO;AAFf,MADJ,CAFR,EASI,kEAAC,6DAAD;AACI,eAAS,EAAGZ,UAAU,CAACe,SAD3B;AAEI,WAAK,EAAG;AAAEC,QAAAA,SAAS,EAAEhB,UAAU,CAACK;AAAxB,OAFZ;AAGI,aAAO,EAAC,GAHZ;AAII,cAAQ,EAAGK,eAJf;AAKI,WAAK,EAAGV,UAAU,CAACC;AALvB,MATJ,CADJ;AAmBH,GApDgD;AAqDjDgB,EAAAA,IAAI,EAAIC,KAAF,IAAa;AACf,UAAMC,UAAU,GAAG3B,uEAAA,EAAnB;AAEA,WACI,yEAAU2B,UAAV,EACI,kEAAC,qEAAD;AACI,eAAS,EAAI,4BAA4BD,KAAK,CAAClB,UAAN,CAAiBK,SAAW,EADzE;AAEI,aAAO,EAAC,GAFZ;AAGI,WAAK,EAAGa,KAAK,CAAClB,UAAN,CAAiBC;AAH7B,MADJ,CADJ;AASH;AAjEgD,CAApC,CAAjB,C","sources":["webpack://gutenbergblocks/external window [\"wp\",\"blockEditor\"]","webpack://gutenbergblocks/external window [\"wp\",\"blocks\"]","webpack://gutenbergblocks/external window [\"wp\",\"element\"]","webpack://gutenbergblocks/webpack/bootstrap","webpack://gutenbergblocks/webpack/runtime/compat get default export","webpack://gutenbergblocks/webpack/runtime/define property getters","webpack://gutenbergblocks/webpack/runtime/hasOwnProperty shorthand","webpack://gutenbergblocks/webpack/runtime/make namespace object","webpack://gutenbergblocks/./src/gutenbergrichtext/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\r\n \r\nimport {\r\n    useBlockProps,\r\n    RichText,\r\n    AlignmentToolbar,\r\n    BlockControls,\r\n} from '@wordpress/block-editor';\r\n \r\nregisterBlockType( 'create-block/gutenbergrichtext', {\r\n    apiVersion: 2,\r\n    title: 'Gutenberg Custom Rich Text',\r\n    icon: 'universal-access-alt',\r\n    category: 'common',\r\n    attributes: {\r\n        content: {\r\n            type: 'array',\r\n            source: 'children',\r\n            selector: 'p',\r\n        },\r\n        alignment: {\r\n            type: 'string',\r\n            default: 'none',\r\n        },\r\n    },\r\n    example: {\r\n        attributes: {\r\n            content: 'Hello World',\r\n            alignment: 'right',\r\n        },\r\n    },\r\n    edit: ( { attributes, setAttributes } ) => {\r\n        const onChangeContent = ( newContent ) => {\r\n            setAttributes( { content: newContent } );\r\n        };\r\n \r\n        const onChangeAlignment = ( newAlignment ) => {\r\n            setAttributes( {\r\n                alignment: newAlignment === undefined ? 'none' : newAlignment,\r\n            } );\r\n        };\r\n \r\n        return (\r\n            <div { ...useBlockProps() }>\r\n                {\r\n                    <BlockControls>\r\n                        <AlignmentToolbar\r\n                            value={ attributes.alignment }\r\n                            onChange={ onChangeAlignment }\r\n                        />\r\n                    </BlockControls>\r\n                }\r\n                <RichText\r\n                    className={ attributes.className }\r\n                    style={ { textAlign: attributes.alignment } }\r\n                    tagName=\"p\"\r\n                    onChange={ onChangeContent }\r\n                    value={ attributes.content }\r\n                />\r\n            </div>\r\n        );\r\n    },\r\n    save: ( props ) => {\r\n        const blockProps = useBlockProps.save();\r\n \r\n        return (\r\n            <div { ...blockProps }>\r\n                <RichText.Content\r\n                    className={ `gutenberg-examples-align-${ props.attributes.alignment }` }\r\n                    tagName=\"p\"\r\n                    value={ props.attributes.content }\r\n                />\r\n            </div>\r\n        );\r\n    },\r\n} );"],"names":["registerBlockType","useBlockProps","RichText","AlignmentToolbar","BlockControls","apiVersion","title","icon","category","attributes","content","type","source","selector","alignment","default","example","edit","setAttributes","onChangeContent","newContent","onChangeAlignment","newAlignment","undefined","className","textAlign","save","props","blockProps"],"sourceRoot":""}