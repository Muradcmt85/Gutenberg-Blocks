{"version":3,"file":"gutenbergtoolbar/index.js","mappings":"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","sources":["webpack://gutenbergblocks/external window [\"wp\",\"blockEditor\"]","webpack://gutenbergblocks/external window [\"wp\",\"blocks\"]","webpack://gutenbergblocks/external window [\"wp\",\"components\"]","webpack://gutenbergblocks/external window [\"wp\",\"element\"]","webpack://gutenbergblocks/external window [\"wp\",\"i18n\"]","webpack://gutenbergblocks/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://gutenbergblocks/webpack/bootstrap","webpack://gutenbergblocks/webpack/runtime/compat get default export","webpack://gutenbergblocks/webpack/runtime/define property getters","webpack://gutenbergblocks/webpack/runtime/hasOwnProperty shorthand","webpack://gutenbergblocks/webpack/runtime/make namespace object","webpack://gutenbergblocks/./src/gutenbergtoolbar/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\r\nimport { registerBlockType } from '@wordpress/blocks';\r\nimport { __ } from '@wordpress/i18n';\r\nimport { TextControl } from '@wordpress/components';\r\n \r\nimport {\r\n    useBlockProps,\r\n    ColorPalette,\r\n    InspectorControls,\r\n} from '@wordpress/block-editor';\r\n \r\nregisterBlockType( 'create-block/gutenbergtoolbar', {\r\n    apiVersion: 2,\r\n    attributes: {\r\n        message: {\r\n            type: 'string',\r\n            source: 'text',\r\n            selector: 'div',\r\n            default: '', // empty default\r\n        },\r\n        bg_color: { type: 'string', default: '#000000' },\r\n        text_color: { type: 'string', default: '#ffffff' },\r\n    },\r\n    edit: ( { attributes, setAttributes } ) => {\r\n        const onChangeBGColor = ( hexColor ) => {\r\n            setAttributes( { bg_color: hexColor } );\r\n        };\r\n \r\n        const onChangeTextColor = ( hexColor ) => {\r\n            setAttributes( { text_color: hexColor } );\r\n        };\r\n \r\n        return (\r\n            <div { ...useBlockProps() }>\r\n                <InspectorControls key=\"setting\">\r\n                    <div id=\"gutenbergtoolbar-controls\">\r\n                        <fieldset>\r\n                            <legend className=\"blocks-base-control__label\">\r\n                                { __( 'Background color', 'gutenbergtoolbar' ) }\r\n                            </legend>\r\n                            <ColorPalette // Element Tag for Gutenberg standard colour selector\r\n                                onChange={ onChangeBGColor } // onChange event callback\r\n                            />\r\n                        </fieldset>\r\n                        <fieldset>\r\n                            <legend className=\"blocks-base-control__label\">\r\n                                { __( 'Text color', 'gutenbergtoolbar' ) }\r\n                            </legend>\r\n                            <ColorPalette // Element Tag for Gutenberg standard colour selector\r\n                                onChange={ onChangeTextColor } // onChange event callback\r\n                            />\r\n                        </fieldset>\r\n                    </div>\r\n                </InspectorControls>\r\n                <TextControl\r\n                    value={ attributes.message }\r\n                    onChange={ ( val ) => setAttributes( { message: val } ) }\r\n                    style={ {\r\n                        backgroundColor: attributes.bg_color,\r\n                        color: attributes.text_color,\r\n                    } }\r\n                />\r\n            </div>\r\n        );\r\n    },\r\n    save: ( { attributes } ) => {\r\n        return (\r\n            <div\r\n                { ...useBlockProps.save() }\r\n                style={ {\r\n                    backgroundColor: attributes.bg_color,\r\n                    color: attributes.text_color,\r\n                } }\r\n            >\r\n                { attributes.message }\r\n            </div>\r\n        );\r\n    },\r\n} );"],"names":["registerBlockType","__","TextControl","useBlockProps","ColorPalette","InspectorControls","apiVersion","attributes","message","type","source","selector","default","bg_color","text_color","edit","setAttributes","onChangeBGColor","hexColor","onChangeTextColor","val","backgroundColor","color","save"],"sourceRoot":""}